
# 服务端口
server.port=8080
# 服务名
spring.application.name=edu-gdpuxjl
# 环境设置：dev、test、prod
spring.profiles.active=dev
# mysql数据库连接
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/online_edu?characterEncoding=utf-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=123456

#热加载生效  true为生效，fals为关闭
spring.devtools.restart.enabled=false


# Hikari是Spring Boot 2.0之后默认整合的数据库连接池，比druid更快的数据库连接池
# 数据源类型
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
# 连接池名称，默认HikariPool-1
spring.datasource.hikari.pool-name=GuliHikariPool
# 最大连接数，小于等于0会被重置为默认值10；大于零小于1会被重置为minimum-idle的值
spring.datasource.hikari.maximum-pool-size=12
# 连接超时时间:毫秒，小于250毫秒，否则被重置为默认值30秒
spring.datasource.hikari.connection-timeout=60000
# 最小空闲连接，默认值10，小于0或大于maximum-pool-size，都会重置为maximum-pool-size
spring.datasource.hikari.minimum-idle=10
# 空闲连接超时时间，默认值600000（10分钟），大于等于max-lifetime且max-lifetime>0，会被重置为0；不等于0且小于10秒，会被重置为10秒。
# 只有空闲连接数大于最大连接数且空闲时间超过该值，才会被释放
spring.datasource.hikari.idle-timeout=500000
# 连接最大存活时间.不等于0且小于30秒，会被重置为默认值30分钟.设置应该比mysql设置的超时时间短
spring.datasource.hikari.max-lifetime=540000
#连接测试查询
spring.datasource.hikari.connection-test-query=SELECT 1
#mybatis日志
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl


spring.jackson.date-format= yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone= GMT+8



spring.jackson.default-property-inclusion=non_null

#配置mapper xml文件的路径
mybatis-plus.mapper-locations=classpath:com/online/edu/gdpuxjl/mapper/xml/*.xml

#指定注册中心地址
eureka.client.service-url.defaultZone=http://localhost:8888/eureka/
#eureka服务器上获取的是服务器的ip地址，否则是主机名
eureka.instance.prefer-ip-address=true

#Endpoint以杭州为例，其它Region请按实际情况填写。
aliyun.endpoint=自己的
#云账号AccessKey有所有API访问权限，建议遵循阿里云安全最佳实践，创建并使用RAM子账号进行API访问或日常运维，请登录 https://ram.console.aliyun.com 创建。
aliyun.accesskeyid=自己的
aliyun.accesskeysecret=自己的
aliyun.bucketname=自己的